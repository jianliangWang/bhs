package ${package.Controller};


import com.baomidou.mybatisplus.core.metadata.IPage;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.security.access.prepost.PreAuthorize;
import com.wjl.common.system.ResultJson;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Api(tags = "")
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} extends  BaseController<${table.entityName}>  {
#end

    private final Logger logger = LoggerFactory.getLogger(${table.controllerName}.class);

    private final ${table.serviceName} ${table.entityPath}Service;

    public ${table.controllerName}(${table.serviceName} ${table.entityPath}Service) {
        this.${table.entityPath}Service = ${table.entityPath}Service;
    }

    @ApiOperation("列表")
    @PostMapping("list")
    @PreAuthorize("hasAnyAuthority('-list')")
    public ResultJson list(){
        IPage<${table.entityName}> pageList = ${table.entityPath}Service.page(getPage());
        return ResultJson.success(pageList);
    }

    @ApiOperation("新增")
    @PostMapping("add")
    @PreAuthorize("hasAnyAuthority('-add')")
    public ResultJson add(${table.entityName} ${table.entityName}){
        ${table.entityPath}Service.save(${table.entityName});
        return ResultJson.success();
    }

    @ApiOperation("修改")
    @PostMapping("update")
    @PreAuthorize("hasAnyAuthority('-update')")
    public ResultJson update(${table.entityName} ${table.entityName}){
        ${table.entityPath}Service.updateById(${table.entityName});
        return ResultJson.success();
    }

    @ApiOperation("删除")
    @PostMapping("delete")
    @PreAuthorize("hasAnyAuthority('-delete')")
    public ResultJson delete(Integer id){
        ${table.entityPath}Service.removeById(id);
        return ResultJson.success();
    }
}
#end
